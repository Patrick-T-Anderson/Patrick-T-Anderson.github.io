<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">

<head>
  <title>stor</title>
  <link href=".src/preferred.css" rel="stylesheet" type="text/css"/>
</head>

<body>
<p class='header'>
 <a href="-home.htm">Home</a> | <a href="-diary.htm">Diary</a> | <a href="-todo.htm">Todo</a> | <a href="-index.htm">Index</a> | <a href="-about.htm">About</a> |</p>
<p class='main'><span class="rel">See: <a href="chat.htm">chat</a>, <a href="cloud.htm">cloud</a>, P2P, storage</span><br/>
<br/>
<a class="ext" href="https://Green.FileCoin.io">Green.FileCoin.io</a><br/>
<br/>
<a class="ext" href="https://BeakerBrowser.com">BeakerBrowser.com</a> <span class="quot2">>>An experimental peer-to-peer Web browser.</span><br/>
<br/>
<a class="ext" href="https://SolidProject.org">SolidProject.org</a><br/>
<br/>
<a class="ext" href="https://FileCoin.com">FileCoin.com</a> uses for <a class="ext" href="https://IPFS.org">IPFS.org</a><br/>
<br/>
A pure P2P <a href="chat.htm">chat</a> system can be tricky.<br/>
<br/>
For example, imagine node 'A' <a href="chat.htm">chat</a>s to 'B', but 'B' is offline, then 'A' goes offline before 'B' is back online...<br/>
<br/>
One solution is to store data on node 'C' "in <a href="return.htm">return</a> for" 'C' being allowed to store data on node 'A' and 'B'.<br/>
<br/>
This reciprocal compensation model allows us to "pay" each other at any quality-of-service level without passing tokens <small>(without using any form of '<a href="mone.htm">mone</a>y')</small>.<br/>
<br/>
<br/>
Video <a href="need.htm">need</a>s more storage and faster net<a href="work.htm">work</a>s, so a pure P2P system may struggle to deliver when all Nodes are small.<br/>
<br/>
To overcome this, each Node could initially contact a central Registry server <small>(DNS name or IP address could be "hard coded" into each client)</small> to report their availability, and to find other Nodes.<br/>
<br/>
which use a location-based na<a href="min.htm">min</a>g convention to quickly discover other Nodes near them.<br/>
<br/>
promote <br/>
<small>(Federation)</small> <br/>
<br/>
and also to be a Registry for na<a href="min.htm">min</a>g and Node discovery.<br/>
<br/>
to host Video and other big files<br/>
<br/>
To promote MetaNodes, each Node offers reciprocation in the form of:<br/>
<span class="bullet">.</span> Storage<br/>
<span class="bullet">.</span> Original content <small>(new Video, for example)</small><br/>
<span class="bullet">.</span> <a href="skill.htm">Skill</a>s <small>(by signing <a href="work_contract.htm">Work_Contract</a>s)</small><br/>
<br/>
</p>
<p class='footer'>
 Page generated from <a href=".txt/stor">stor</a> by <a href=".src/lens.el">lens.el</a>.</p>
</body>
</html>
